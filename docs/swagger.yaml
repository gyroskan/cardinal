basePath: /api/v1
definitions:
  models.Ban:
    properties:
      autoBan:
        type: boolean
      banID:
        type: integer
      banReason:
        type: string
      bannedAt:
        type: string
      bannerID:
        type: string
      guildID:
        type: string
      memberID:
        type: string
    type: object
  models.Channel:
    properties:
      channelID:
        type: string
      guildID:
        type: string
      ignored:
        type: boolean
      wpBlacklisted:
        type: boolean
    type: object
  models.Guild:
    properties:
      allowModeration:
        type: boolean
      banTime:
        type: integer
      disabledCommands:
        type: string
      guildID:
        type: string
      guildName:
        type: string
      lvlChannel:
        type: string
      lvlReplace:
        type: boolean
      lvlResponse:
        type: integer
      maxWarns:
        type: integer
      prefix:
        type: string
      privateWelcomeMsg:
        type: string
      reportChannel:
        type: string
      welcomeChannel:
        type: string
      welcomeMsg:
        type: string
    type: object
  models.Member:
    properties:
      guildID:
        type: string
      joinedAt:
        format: date-time
        type: string
      left:
        type: integer
      level:
        type: integer
      memberID:
        type: string
      xp:
        type: integer
    type: object
  models.Role:
    properties:
      guildID:
        type: string
      ignored:
        type: boolean
      isDefault:
        type: boolean
      reward:
        type: integer
      roleID:
        type: string
      xpBlacklisted:
        type: boolean
    type: object
  models.User:
    properties:
      accessLvl:
        type: integer
      banned:
        type: boolean
      createdAt:
        type: string
      discordID:
        type: string
      email:
        type: string
      username:
        type: string
    type: object
  models.UserCreation:
    properties:
      discordID:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.UserModification:
    properties:
      discordID:
        type: string
      email:
        type: string
      oldPassword:
        type: string
      password:
        type: string
    type: object
  models.Warn:
    properties:
      guildID:
        type: string
      memberID:
        type: string
      warnID:
        type: integer
      warnReason:
        type: string
      warnedAt:
        type: string
      warnerID:
        type: string
    type: object
host: cardinal.gyroskan.com
info:
  contact:
    email: gyroskan@gmail.com
    name: API Support
  description: The API to interact with cardinal discord bot database.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Cardinal API
  version: "0.1"
paths:
  /guilds/:
    get:
      description: Fetch all guilds.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Guild'
            type: array
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get all Guilds
      tags:
      - Guilds
    post:
      description: Creates a new Guild with the given values
      parameters:
      - description: Provide the guild values
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.Guild'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Guild'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "500":
          description: Server error
      summary: Create guild
      tags:
      - Guilds
  /guilds/{guildID}:
    delete:
      consumes:
      - application/json
      description: Delete a guild
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "206":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server Error
      summary: Delete guild
      tags:
      - Guilds
    get:
      description: Fetch a specific guild
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Guild'
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
      summary: Get one guild
      tags:
      - Guilds
    patch:
      consumes:
      - application/json
      description: Update fields of a guild
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Guild modifications
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.Guild'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Guild'
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server Error
      summary: Update guild values
      tags:
      - Guilds
  /guilds/{guildID}/channels:
    get:
      description: Fetch all channels of the guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - default: false
        description: ignored channels only
        in: query
        name: ignored
        type: boolean
      - default: false
        description: xpBlacklist channels only
        in: query
        name: xpBlacklist
        type: boolean
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Guild channels
      tags:
      - Channels
    post:
      consumes:
      - application/json
      description: Create a new channel for a guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Channel values
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/models.Channel'
      produces:
      - application/json
      responses:
        "201":
          description: Created channel
          schema:
            $ref: '#/definitions/models.Channel'
        "400":
          description: Wrong values
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Create channel
      tags:
      - Channels
  /guilds/{guildID}/channels/{channelID}:
    delete:
      consumes:
      - application/json
      description: Delete a guild channel
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Channel id
        in: path
        name: channelID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "206":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Fountd
        "500":
          description: Server Error
      summary: Delete guild channel
      tags:
      - Channels
    get:
      description: Fetch the channel of the guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: channel id
        in: path
        name: channelID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
      summary: Get one Guild Channel
      tags:
      - Channels
    patch:
      consumes:
      - application/json
      description: Update fields of a guild's channel
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Channel id
        in: path
        name: channelID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Fountd
        "500":
          description: Server Error
      summary: Update channel values
      tags:
      - Channels
  /guilds/{guildID}/members:
    get:
      description: Fetch all members of the guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - default: 1
        description: limit to fetch
        in: query
        name: limit
        type: integer
      - default: "0"
        description: higher last id fetched
        in: query
        name: after
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Guild Members
      tags:
      - Members
    post:
      consumes:
      - application/json
      description: Create a new member from a guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Member values
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      produces:
      - application/json
      responses:
        "201":
          description: Created member
          schema:
            $ref: '#/definitions/models.Member'
        "400":
          description: Wrong values
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Create member
      tags:
      - Members
  /guilds/{guildID}/members/{memberID}:
    delete:
      consumes:
      - application/json
      description: Delete a guild member
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Member id
        in: path
        name: memberID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "206":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Fountd
        "500":
          description: Server Error
      summary: Delete guild member
      tags:
      - Members
    get:
      description: Fetch the member of the guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
      summary: Get one Guild Member
      tags:
      - Members
    patch:
      consumes:
      - application/json
      description: Update fields of a guild's member
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Guild id
        in: path
        name: memberID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Fountd
        "500":
          description: Server Error
      summary: Update member value
      tags:
      - Members
  /guilds/{guildID}/members/{memberID}/bans:
    get:
      description: Fetch all bans of the member.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Member Bans
      tags:
      - Bans
    post:
      consumes:
      - application/json
      description: Create a new ban for a member.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created role
          schema:
            $ref: '#/definitions/models.Ban'
        "400":
          description: Wrong values
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Create ban
      tags:
      - Bans
  /guilds/{guildID}/members/{memberID}/bans/{banID}:
    delete:
      consumes:
      - application/json
      description: Delete a member's ban
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      - description: ban id
        in: path
        name: banID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "206":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server Error
      summary: Delete member's ban
      tags:
      - Bans
    get:
      description: Fetch the ban of the member.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      - description: ban id
        in: path
        name: banID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
      summary: Get one ban
      tags:
      - Bans
  /guilds/{guildID}/members/{memberID}/reset:
    post:
      consumes:
      - application/json
      description: Reset level and xp for the specific guild's members.
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Guild id
        in: path
        name: memberID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Member reset
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Reset member from a guild
      tags:
      - Members
  /guilds/{guildID}/members/{memberID}/warns:
    get:
      description: Fetch all warns of the member.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Member Warns
      tags:
      - Warns
    post:
      consumes:
      - application/json
      description: Create a new warn for a member.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created warn
          schema:
            $ref: '#/definitions/models.Warn'
        "400":
          description: Wrong values
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Create warn
      tags:
      - Warns
  /guilds/{guildID}/members/{memberID}/warns/{warnID}:
    delete:
      consumes:
      - application/json
      description: Delete a member's warn
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      - description: warn id
        in: path
        name: warnID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "206":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server Error
      summary: Delete member's warn
      tags:
      - Warns
    get:
      description: Fetch the warn of the member.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: member id
        in: path
        name: memberID
        required: true
        type: string
      - description: warn id
        in: path
        name: warnID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
      summary: Get one warn
      tags:
      - Warns
  /guilds/{guildID}/members/reset:
    post:
      consumes:
      - application/json
      description: Reset level and xp for all guild's members.
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Member reset
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Reset guild's members
      tags:
      - Members
  /guilds/{guildID}/reset:
    post:
      consumes:
      - application/json
      description: |-
        Reset guild parameters to default values.
        Do not change members values.
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Guild'
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Reset guild
      tags:
      - Guilds
  /guilds/{guildID}/roles:
    get:
      description: Fetch all roles of the guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - default: false
        description: reward from this lvl only
        in: query
        name: reward
        type: boolean
      - default: false
        description: ignored roles only
        in: query
        name: ignored
        type: boolean
      - default: false
        description: xpBlacklist roles only
        in: query
        name: xpBlacklist
        type: boolean
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Guild roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create a new role for a guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: Role values
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "201":
          description: Created role
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Wrong values
        "403":
          description: Forbidden
        "500":
          description: Server Error
      summary: Create role
      tags:
      - Roles
  /guilds/{guildID}/roles/{roleID}:
    delete:
      consumes:
      - application/json
      description: Delete a guild role
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: role id
        in: path
        name: roleID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "206":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Fountd
        "500":
          description: Server Error
      summary: Delete guild role
      tags:
      - Roles
    get:
      description: Fetch the role of the guild.
      parameters:
      - description: guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: role id
        in: path
        name: roleID
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Server error
      summary: Get one Guild role
      tags:
      - Roles
    patch:
      consumes:
      - application/json
      description: Update fields of a guild's role
      parameters:
      - description: Guild id
        in: path
        name: guildID
        required: true
        type: string
      - description: role id
        in: path
        name: roleID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not Fountd
        "500":
          description: Server Error
      summary: Update role values
      tags:
      - Roles
  /users/:
    get:
      description: Get a list of existing users
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Users
      tags:
      - Users
  /users/{username}:
    delete:
      description: Delete definitively the user.
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: NotFound
        "500":
          description: Server error
      summary: Delete User
      tags:
      - Users
    get:
      description: Get a specific user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get User
      tags:
      - Users
    patch:
      description: Update specified User fields
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: fields to modify
        in: body
        name: userModif
        required: true
        schema:
          $ref: '#/definitions/models.UserModification'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid values
        "403":
          description: Forbidden
        "404":
          description: NotFound
        "500":
          description: Server error
      summary: Update User
      tags:
      - Users
    post:
      description: Update User access level
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: access_level
        in: query
        name: access_level
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: NotFound
        "500":
          description: Server error
      summary: Update User access level
      tags:
      - Users
  /users/{username}/ban:
    delete:
      description: Update User ban. POST to unbann, DELETE to ban.
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: NotFound
        "500":
          description: Server error
      summary: Ban User
      tags:
      - Users
    post:
      description: Update User ban. POST to unbann, DELETE to ban.
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "404":
          description: NotFound
        "500":
          description: Server error
      summary: Ban User
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      description: Login to get user token
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "400":
          description: login invalid
        "500":
          description: Server Error
      summary: Login user
      tags:
      - Users
  /users/me:
    get:
      description: Get the logged in user
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
        "500":
          description: Server error
      summary: Get Logged in User
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User values
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreation'
      produces:
      - application/json
      responses:
        "201":
          description: Created user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Wrong values
        "500":
          description: Server Error
      summary: Register user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
