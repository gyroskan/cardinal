// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2022-04-30 15:20:22.679339552 +0200 CEST m=+4.595698145
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "gyroskan@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/guilds/": {
            "get": {
                "description": "Fetch all guilds.",
                "tags": [
                    "Guilds"
                ],
                "summary": "Get all Guilds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Guild"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Creates a new Guild with the given values",
                "tags": [
                    "Guilds"
                ],
                "summary": "Create guild",
                "parameters": [
                    {
                        "description": "Provide the guild values",
                        "name": "guild",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/guilds/{guildID}": {
            "get": {
                "description": "Fetch a specific guild",
                "tags": [
                    "Guilds"
                ],
                "summary": "Get one guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guilds"
                ],
                "summary": "Delete guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "patch": {
                "description": "Update fields of a guild",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guilds"
                ],
                "summary": "Update guild values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Guild modifications",
                        "name": "guild",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/channels": {
            "get": {
                "description": "Fetch all channels of the guild.",
                "tags": [
                    "Channels"
                ],
                "summary": "Get Guild channels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "ignored channels only",
                        "name": "ignored",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "xpBlacklist channels only",
                        "name": "xpBlacklisted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Channel"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Create a new channel for a guild.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Create channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Channel values",
                        "name": "channel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Channel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created channel",
                        "schema": {
                            "$ref": "#/definitions/models.Channel"
                        }
                    },
                    "400": {
                        "description": "Wrong values"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/channels/{channelID}": {
            "get": {
                "description": "Fetch the channel of the guild.",
                "tags": [
                    "Channels"
                ],
                "summary": "Get one Guild Channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "channel id",
                        "name": "channelID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a guild channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Delete guild channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Channel id",
                        "name": "channelID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "206": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "patch": {
                "description": "Update fields of a guild's channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Update channel values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Channel id",
                        "name": "channelID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Channel values",
                        "name": "channel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Channel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Channel"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members": {
            "get": {
                "description": "Fetch all members of the guild.",
                "tags": [
                    "Members"
                ],
                "summary": "Get Guild Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "limit to fetch",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "0",
                        "description": "higher last id fetched",
                        "name": "after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Create a new member from a guild.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "summary": "Create member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Member values",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created member",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    },
                    "400": {
                        "description": "Wrong values"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/reset": {
            "post": {
                "description": "Reset level and xp for all guild's members.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "summary": "Reset all guild's members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member reset"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/{memberID}": {
            "get": {
                "description": "Fetch the member of the guild.",
                "tags": [
                    "Members"
                ],
                "summary": "Get one Guild Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a guild member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "summary": "Delete a guild member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "patch": {
                "description": "Update fields of a guild's member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "summary": "Update member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Member values",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/{memberID}/bans": {
            "get": {
                "description": "Fetch all bans of the member.",
                "tags": [
                    "Bans"
                ],
                "summary": "Get Member Bans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ban"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Create a new ban for a member.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bans"
                ],
                "summary": "Create ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ban",
                        "name": "ban",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ban"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created role",
                        "schema": {
                            "$ref": "#/definitions/models.Ban"
                        }
                    },
                    "400": {
                        "description": "Wrong values"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/{memberID}/bans/{banID}": {
            "get": {
                "description": "Fetch the ban of the member.",
                "tags": [
                    "Bans"
                ],
                "summary": "Get one ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ban id",
                        "name": "banID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Ban"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a member's ban",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bans"
                ],
                "summary": "Delete member's ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ban id",
                        "name": "banID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/{memberID}/reset": {
            "post": {
                "description": "Reset level and xp for the specific guild's member.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "summary": "Reset a member from a guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Member reset",
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/{memberID}/warns": {
            "get": {
                "description": "Fetch all warns of the member.",
                "tags": [
                    "Warns"
                ],
                "summary": "Get Member Warns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Warn"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Create a new warn for a member.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warns"
                ],
                "summary": "Create warn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "warn values",
                        "name": "warn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Warn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created warn",
                        "schema": {
                            "$ref": "#/definitions/models.Warn"
                        }
                    },
                    "400": {
                        "description": "Wrong values"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/members/{memberID}/warns/{warnID}": {
            "get": {
                "description": "Fetch the warn of the member.",
                "tags": [
                    "Warns"
                ],
                "summary": "Get one warn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "warn id",
                        "name": "warnID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Warn"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a member's warn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warns"
                ],
                "summary": "Delete member's warn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member id",
                        "name": "memberID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "warn id",
                        "name": "warnID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/reset": {
            "post": {
                "description": "Reset guild parameters to default values.\nDo not change members values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guilds"
                ],
                "summary": "Reset guild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/roles": {
            "get": {
                "description": "Fetch all roles of the guild.",
                "tags": [
                    "Roles"
                ],
                "summary": "Get Guild roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "reward for this lvl only",
                        "name": "reward",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "ignored roles only",
                        "name": "ignored",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "xpBlacklisted roles only",
                        "name": "xpBlacklisted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Role"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Create a new role for a guild.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role values",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created role",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    },
                    "400": {
                        "description": "Wrong values"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/guilds/{guildID}/roles/{roleID}": {
            "get": {
                "description": "Fetch the role of the guild.",
                "tags": [
                    "Roles"
                ],
                "summary": "Get one Guild role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a guild role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a guild role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "patch": {
                "description": "Update fields of a guild's role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Update role values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild id",
                        "name": "guildID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role values",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Role"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "description": "Get a list of all existing users",
                "tags": [
                    "Users"
                ],
                "summary": "Get Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login to get user token",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "username",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid logins"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get the logged in user",
                "tags": [
                    "Users"
                ],
                "summary": "Get Logged in User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User values",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created user",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid values"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "description": "Get a specific user",
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "description": "Update User access level",
                "tags": [
                    "Users"
                ],
                "summary": "Update User access level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "access_level",
                        "name": "access_level",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete definitively the user.",
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "description": "Update specified User fields",
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User modification",
                        "name": "userModif",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserModification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid values"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/{username}/ban": {
            "post": {
                "description": "Update User ban. POST to unbann, DELETE to ban.",
                "tags": [
                    "Users"
                ],
                "summary": "Ban User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Update User ban. POST to unbann, DELETE to ban.",
                "tags": [
                    "Users"
                ],
                "summary": "Ban User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Ban": {
            "type": "object",
            "properties": {
                "autoBan": {
                    "description": "Whether the ban was automatic or not",
                    "type": "boolean"
                },
                "banID": {
                    "description": "ID of the ban",
                    "type": "integer"
                },
                "banReason": {
                    "description": "Reason for the ban",
                    "type": "string"
                },
                "bannedAt": {
                    "description": "Date the member was banned",
                    "type": "string"
                },
                "bannerID": {
                    "description": "ID of the user who banned the member",
                    "type": "string"
                },
                "guildID": {
                    "description": "ID of the guild",
                    "type": "string"
                },
                "memberID": {
                    "description": "ID of the member",
                    "type": "string"
                }
            }
        },
        "models.Channel": {
            "type": "object",
            "properties": {
                "channelID": {
                    "description": "ID of the channel",
                    "type": "string"
                },
                "guildID": {
                    "description": "ID of the guild",
                    "type": "string"
                },
                "ignored": {
                    "description": "Wether the channel is ignored by the bot or not",
                    "type": "boolean"
                },
                "wpBlacklisted": {
                    "description": "Wether the channel is blacklisted from xp or not",
                    "type": "boolean"
                }
            }
        },
        "models.Guild": {
            "type": "object",
            "properties": {
                "allowModeration": {
                    "description": "Whether or not to allow moderation commands",
                    "type": "boolean"
                },
                "banTime": {
                    "description": "Time in days to ban a user for",
                    "type": "integer"
                },
                "disabledCommands": {
                    "description": "List of disabled commands separated by slashes",
                    "type": "string"
                },
                "guildID": {
                    "description": "Guild ID",
                    "type": "string"
                },
                "guildName": {
                    "description": "Name of the guild",
                    "type": "string"
                },
                "lvlChannel": {
                    "description": "Channel ID to send level up messages",
                    "type": "string"
                },
                "lvlReplace": {
                    "description": "Weather or not to replace previous rewards",
                    "type": "boolean"
                },
                "lvlResponse": {
                    "description": "If the level is a multiple of this number, send a level up message",
                    "type": "integer"
                },
                "maxWarns": {
                    "description": "Max number of warnings before a user is banned",
                    "type": "integer"
                },
                "prefix": {
                    "description": "Prefix used for calling the bot",
                    "type": "string"
                },
                "privateWelcomeMsg": {
                    "description": "Message to send when a user joins in DM",
                    "type": "string"
                },
                "reportChannel": {
                    "description": "Channel ID for reporting",
                    "type": "string"
                },
                "welcomeChannel": {
                    "description": "Channel ID to send welcome messages",
                    "type": "string"
                },
                "welcomeMsg": {
                    "description": "Message to send when a user joins",
                    "type": "string"
                }
            }
        },
        "models.Member": {
            "type": "object",
            "properties": {
                "guildID": {
                    "description": "Guild ID",
                    "type": "string"
                },
                "joinedAt": {
                    "description": "Date for when the member joined the guild",
                    "type": "string",
                    "format": "date-time"
                },
                "left": {
                    "description": "Number of times the member left the guild",
                    "type": "integer"
                },
                "level": {
                    "description": "Level of the member",
                    "type": "integer"
                },
                "memberID": {
                    "description": "Member ID",
                    "type": "string"
                },
                "xp": {
                    "description": "Amount of xp the member has",
                    "type": "integer"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "guildID": {
                    "description": "ID of the guild",
                    "type": "string"
                },
                "ignored": {
                    "description": "Wether the role is ignored by the bot or not",
                    "type": "boolean"
                },
                "isDefault": {
                    "description": "Wether to give the role to new members",
                    "type": "boolean"
                },
                "reward": {
                    "description": "The level corresponding to the reward",
                    "type": "integer"
                },
                "roleID": {
                    "description": "ID of the role",
                    "type": "string"
                },
                "xpBlacklisted": {
                    "description": "Wether the role is blacklisted from xp or not",
                    "type": "boolean"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "accessLvl": {
                    "description": "Access level to the api of the user",
                    "type": "integer"
                },
                "banned": {
                    "description": "Whether the user is banned or not",
                    "type": "boolean"
                },
                "createdAt": {
                    "description": "Date the user was created",
                    "type": "string"
                },
                "discordID": {
                    "description": "Discord ID of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the user",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the user",
                    "type": "string"
                }
            }
        },
        "models.UserCreation": {
            "type": "object",
            "properties": {
                "discordID": {
                    "description": "Discord ID of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the user",
                    "type": "string"
                },
                "password": {
                    "description": "Password of the user",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the user",
                    "type": "string"
                }
            }
        },
        "models.UserModification": {
            "type": "object",
            "properties": {
                "discordID": {
                    "description": "Discord ID of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the user",
                    "type": "string"
                },
                "oldPassword": {
                    "description": "Old password of the user",
                    "type": "string"
                },
                "password": {
                    "description": "New password of the user",
                    "type": "string"
                }
            }
        },
        "models.Warn": {
            "type": "object",
            "properties": {
                "guildID": {
                    "description": "ID of the guild",
                    "type": "string"
                },
                "memberID": {
                    "description": "ID of the member",
                    "type": "string"
                },
                "warnID": {
                    "description": "ID of the warn",
                    "type": "integer"
                },
                "warnReason": {
                    "description": "Reason for the warn",
                    "type": "string"
                },
                "warnedAt": {
                    "description": "Date the member was warned",
                    "type": "string"
                },
                "warnerID": {
                    "description": "ID of the user who warned the member",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "cardinal.gyroskan.com",
	BasePath:         "/api/v1",
	Schemes:          []string{"https", "http"},
	Title:            "Cardinal API",
	Description:      "The API to interact with cardinal discord bot database.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
